[{"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\index.js":"1","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\App.js":"2","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\store\\UserStore.js":"3","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\store\\DeviceStore.js":"4","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\AppRouter.js":"5","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\NavBar.js":"6","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\http\\userAPI.js":"7","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\routes.js":"8","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\http\\index.js":"9","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\utils\\consts.js":"10","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\DevicePage.js":"11","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\Auth.js":"12","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\Shop.js":"13","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\Basket.js":"14","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\Admin.js":"15","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\http\\deviceAPI.js":"16","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\Pages.js":"17","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\TypeBar.js":"18","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\BrandBar.js":"19","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\DeviceList.js":"20","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\modals\\CreateType.js":"21","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\modals\\CreateDevice.js":"22","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\modals\\CreateBrand.js":"23","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\DeviceItem.js":"24"},{"size":440,"mtime":1638014259352,"results":"25","hashOfConfig":"26"},{"size":861,"mtime":1638384103437,"results":"27","hashOfConfig":"26"},{"size":401,"mtime":1611985807000,"results":"28","hashOfConfig":"26"},{"size":1443,"mtime":1638391297284,"results":"29","hashOfConfig":"26"},{"size":795,"mtime":1611985807000,"results":"30","hashOfConfig":"26"},{"size":2305,"mtime":1638391003810,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1611985807000,"results":"32","hashOfConfig":"26"},{"size":773,"mtime":1638010685297,"results":"33","hashOfConfig":"26"},{"size":407,"mtime":1611985807000,"results":"34","hashOfConfig":"26"},{"size":228,"mtime":1611985807000,"results":"35","hashOfConfig":"26"},{"size":2655,"mtime":1638390760773,"results":"36","hashOfConfig":"26"},{"size":3142,"mtime":1638015495909,"results":"37","hashOfConfig":"26"},{"size":1539,"mtime":1638391564039,"results":"38","hashOfConfig":"26"},{"size":2538,"mtime":1638382283430,"results":"39","hashOfConfig":"26"},{"size":1549,"mtime":1611985807000,"results":"40","hashOfConfig":"26"},{"size":1460,"mtime":1638391558309,"results":"41","hashOfConfig":"26"},{"size":801,"mtime":1638390007139,"results":"42","hashOfConfig":"26"},{"size":843,"mtime":1638372015902,"results":"43","hashOfConfig":"26"},{"size":817,"mtime":1638381227868,"results":"44","hashOfConfig":"26"},{"size":491,"mtime":1611985807000,"results":"45","hashOfConfig":"26"},{"size":1355,"mtime":1611985807000,"results":"46","hashOfConfig":"26"},{"size":6203,"mtime":1638013743192,"results":"47","hashOfConfig":"26"},{"size":1380,"mtime":1638370225863,"results":"48","hashOfConfig":"26"},{"size":1048,"mtime":1638385521000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"8qk320",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\index.js",[],["104","105"],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\App.js",["106"],"import React, {useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(data)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n    return (\n        <BrowserRouter>\n            <NavBar />\n            <AppRouter />\n        </BrowserRouter>\n    );\n});\n\nexport default App;\n","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\store\\UserStore.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\store\\DeviceStore.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\AppRouter.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\NavBar.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\http\\userAPI.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\routes.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\http\\index.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\utils\\consts.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\DevicePage.js",["107"],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\Auth.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\Shop.js",["108","109"],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\Basket.js",["110","111","112","113"],"import React, { useEffect } from 'react';\nimport { useContext } from 'react';\nimport { Context } from '..';\nimport { deleteDeviceFromBasket, getBasket } from '../http/deviceAPI';\n\nimport {Button, Card, Col, Container, Row} from 'react-bootstrap'\nimport { observer } from 'mobx-react-lite';\n\nimport close from '../assets/close.svg'\n\nconst Basket = observer(() => {\n    const {device} = useContext(Context)\n\n    useEffect(() => {\n        getBasket().then(data => device.setBaskets(data))\n    }, [])\n\n\n\n    // ----- Считаем общую сумму, которую юзер набрал в корзину ------- //\n\n    let prices = 0;\n    {device.basket.map(price =>\n        prices += Number(price.device.price)\n    )}\n\n    const dropDevice = (id) => {\n        deleteDeviceFromBasket(id).then(data => {\n            window.location.reload()\n        })\n    }\n\n    return (\n        <Container\n            className=\"d-flex flex-sm-column justify-content-center align-items-center mt-3\"\n        >\n            <h1 className=\"pb-2\">Корзина</h1>\n\n\n\n            {/* ------- Считаем общую сумму ------- */}\n\n            <Card className=\"d-flex flex-row  p-2 justify-content-between align-items-center mb-2\">\n                <h1 className=\"pr-2\">Итого:</h1>\n                <h3 className=\"pl-2\">{prices}<span className=\"font-weight-light pl-2\">рублей</span></h3>\n            </Card>\n\n\n\n            {device.basket.map(product =>\n                <Card className=\"d-flex w-100 p-2 justify-content-center mb-2\" key={product.id}>\n                    <Row className=\"d-flex w-100\">\n                        <Col>\n                            <div className=\"d-flex flex-row align-items-center\">\n                                <img src={process.env.REACT_APP_API_URL + product.device.img} width={100} />\n                                <h1 className=\"pl-3\">{product.device.name}</h1>\n                                <Button variant=\"dark\" className=\"ml-3\" onClick={() => dropDevice(product.id)}>Удалить</Button>\n                            </div>\n                        </Col>\n                        <Col>\n                            <div className=\"d-flex h-100 flex-row justify-content-end align-items-center\">\n                                <h2 className=\"font-weight-light\">{product.device.price} рублей</h2>\n                            </div>\n                        </Col>\n                    </Row>\n\n                </Card>\n            )}\n        </Container>\n    );\n});\n\nexport default Basket;\n","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\pages\\Admin.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\http\\deviceAPI.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\Pages.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\TypeBar.js",["114"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {device} = useContext(Context)\n\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    className=\"text-center p-3\"\n                    action variant=\"dark\"\n                    style={{cursor: 'pointer'}}\n                    active={type.id === device.selectedType.id}\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\BrandBar.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\DeviceList.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\modals\\CreateType.js",[],"D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\modals\\CreateDevice.js",["115","116"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createDevice, fetchBrands, fetchDevices, fetchTypes} from \"../../http/deviceAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({show, onHide}) => {\n    const {device} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => device.setTypes(data))\n        fetchBrands().then(data => device.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addDevice = () => {\n        const formData = new FormData()\n        try{\n            formData.append('name', name)\n            formData.append('price', `${price}`)\n            formData.append('img', file)\n            formData.append('brandId', device.selectedBrand.id)\n            formData.append('typeId', device.selectedType.id)\n            formData.append('info', JSON.stringify(info))\n            createDevice(formData).then(data => onHide())\n        } catch(e){\n            alert(e)\n        }\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить устройство\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedType.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{device.selectedBrand.name || \"Выберите тип\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {device.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => device.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название устройства\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость устройства\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateDevice;\n","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\modals\\CreateBrand.js",["117"],"import React, {useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {createBrand, createType} from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({show, onHide}) => {\n    const [value, setValue] = useState('')\n\n    const addBrand = () => {\n        createBrand({name: value}).then(data => {\n            setValue('')\n            onHide()\n        })\n    }\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить бренд\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Control\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                        placeholder={\"Введите название бренда\"}\n                    />\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default CreateBrand;\n","D:\\yOu_NExT_XIII\\Проекты\\TechStore\\client\\src\\components\\DeviceItem.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":20,"column":8,"nodeType":"124","endLine":20,"endColumn":10,"suggestions":"125"},{"ruleId":"122","severity":1,"message":"126","line":12,"column":8,"nodeType":"124","endLine":12,"endColumn":10,"suggestions":"127"},{"ruleId":"122","severity":1,"message":"128","line":23,"column":8,"nodeType":"124","endLine":23,"endColumn":10,"suggestions":"129"},{"ruleId":"122","severity":1,"message":"128","line":30,"column":8,"nodeType":"124","endLine":30,"endColumn":65,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":9,"column":8,"nodeType":"133","messageId":"134","endLine":9,"endColumn":13},{"ruleId":"122","severity":1,"message":"128","line":16,"column":8,"nodeType":"124","endLine":16,"endColumn":10,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":23,"column":5,"nodeType":"138","messageId":"139","endLine":25,"endColumn":7},{"ruleId":"140","severity":1,"message":"141","line":55,"column":33,"nodeType":"142","endLine":55,"endColumn":109},{"ruleId":"131","severity":1,"message":"143","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":11},{"ruleId":"131","severity":1,"message":"144","line":5,"column":36,"nodeType":"133","messageId":"134","endLine":5,"endColumn":48},{"ruleId":"122","severity":1,"message":"128","line":18,"column":8,"nodeType":"124","endLine":18,"endColumn":10,"suggestions":"145"},{"ruleId":"131","severity":1,"message":"146","line":4,"column":22,"nodeType":"133","messageId":"134","endLine":4,"endColumn":32},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["151"],["152"],"no-unused-vars","'close' is defined but never used.","Identifier","unusedVar",["153"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Col' is defined but never used.","'fetchDevices' is defined but never used.",["154"],"'createType' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"159","fix":"163"},{"desc":"159","fix":"164"},"Update the dependencies array to be: [user]",{"range":"165","text":"166"},"Update the dependencies array to be: [id]",{"range":"167","text":"168"},"Update the dependencies array to be: [device]",{"range":"169","text":"170"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"171","text":"172"},{"range":"173","text":"170"},{"range":"174","text":"170"},[642,644],"[user]",[470,472],"[id]",[875,877],"[device]",[1107,1164],"[device.page, device.selectedType, device.selectedBrand, device]",[493,495],[747,749]]